# Generated by Django 2.2.1 on 2019-10-05 19:04

from django.db import migrations, models
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Login',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(db_column='account_id', primary_key=True, serialize=False, verbose_name='Account ID')),
                ('username', models.CharField(db_column='userid', max_length=23, unique=True)),
                ('password', models.CharField(db_column='user_pass', max_length=32)),
                ('sex', models.CharField(choices=[('M', 'üë¶üèª'), ('F', 'üëßüèª')], default='F', max_length=1, verbose_name='Gender')),
                ('email', models.CharField(max_length=39, unique=True)),
                ('group_id', models.IntegerField(default=0)),
                ('state', models.PositiveIntegerField(choices=[(0, 'Active'), (1, 'Banned')], default=0, verbose_name='RO State')),
                ('unban_time', models.PositiveIntegerField(blank=True, null=True)),
                ('expiration_time', models.PositiveIntegerField(blank=True, null=True)),
                ('logincount', models.PositiveIntegerField(blank=True, default=0)),
                ('last_login', models.DateTimeField(blank=True, db_column='lastlogin', null=True)),
                ('last_ip', models.CharField(blank=True, max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, default='2019-05-19', null=True)),
                ('character_slots', models.PositiveIntegerField(blank=True, null=True)),
                ('pincode', models.CharField(blank=True, max_length=4, null=True)),
                ('pincode_change', models.PositiveIntegerField(default=0)),
                ('vip_time', models.PositiveIntegerField(blank=True, null=True)),
                ('old_group', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'db_table': 'login',
                'managed': True,
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
    ]
